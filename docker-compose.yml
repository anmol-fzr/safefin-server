networks:
  safe-fin:
    driver: bridge

services:
  safe-fin:
    container_name: SafeFin
    build: "./"
    ports:
      - 3000:3000
    networks:
      - safe-fin
    env_file: ".env"
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=pg
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=pgpass
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - safe-fin

  #
  # redis:
  #   image: redis:7-alpine
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - fstack
  #   healthcheck: 
  #     test: ["CMD","redis-cli","ping"]
  #     interval: 10s
  #     timeout: 2s
  #     retries: 3
  #     start_period: 10s
  #   deploy: 
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #
  # mongodb:
  #   image: mongo
  #   container_name: mongodb
  #   ports:
  #     - "27017:27017"
  #   env_file: ".mongo.env"
  #   networks:
  #     - fstack
  #   volumes:
  #     - mongo-data:/data/db
  #     - ./scripts:/docker-entrypoint-initdb.d
  #   healthcheck:
  #     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  #     interval: 30s
  #     timeout: 10s
  #     start_period: 10s
  #     retries: 3
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #
  # rabbitmq:
  #   image: rabbitmq:alpine
  #   container_name: rabbitmq
  #   ports:
  #     - "15672:15672"
  #     - "5672:5672"
  #   env_file: ".rabbitmq.env"
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq
  #   networks:
  #     - fstack
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 10s
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #
volumes:
  db_data:
    driver: local
